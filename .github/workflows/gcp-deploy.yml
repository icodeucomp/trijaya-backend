name: Deploy to Google App Engine

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: app-engine-config
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
  
      - name: Install dependencies
        run: npm ci

      - name: Run Prisma Migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}

      - name: Build application
        run: npm run build

      - name: Debug Secrets
        run: |
          if [ -n "${{ secrets.DEFAULT_IMAGE }}" ]; then
            echo "✓ DEFAULT_IMAGE is set"
          else
            echo "✗ DEFAULT_IMAGE is not set"
          fi

      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Create env.yaml
        run: |
          cat <<EOF > env.yaml
          env_variables:
            DEFAULT_IMAGE: "${{ secrets.DEFAULT_IMAGE }}"
            DATABASE_URL: "${{ secrets.DATABASE_URL }}"
            DIRECT_URL: "${{ secrets.DIRECT_URL }}"
            JWT_AT_SECRET: "${{ secrets.JWT_AT_SECRET }}"
            JWT_RT_SECRET: "${{ secrets.JWT_RT_SECRET }}"
            JWT_AT_EXPIRE: "${{ secrets.JWT_AT_EXPIRE }}"
            JWT_RT_EXPIRE: "${{ secrets.JWT_RT_EXPIRE }}"
            REDIS_HOST: "${{ secrets.REDIS_HOST }}"
            REDIS_PORT: "${{ secrets.REDIS_PORT }}"
            REDIS_PASSWORD: "${{ secrets.REDIS_PASSWORD }}"
            MAIL_HOST: "${{ secrets.MAIL_HOST }}"
            MAIL_PORT: "${{ secrets.MAIL_PORT }}"
            MAIL_SECURE: "${{ secrets.MAIL_SECURE }}"
            MAIL_USER: "${{ secrets.MAIL_USER }}"
            MAIL_PASSWORD: "${{ secrets.MAIL_PASSWORD }}"
            MAIL_FROM: "${{ secrets.MAIL_FROM }}"
            MAIL_NAME: "${{ secrets.MAIL_NAME }}"
            CLOUDINARY_NAME: "${{ secrets.CLOUDINARY_NAME }}"
            CLOUDINARY_API_KEY: "${{ secrets.CLOUDINARY_API_KEY }}"
            CLOUDINARY_API_SECRET: "${{ secrets.CLOUDINARY_API_SECRET }}"
          EOF

      - name: Deploy to Google App Engine
        run: |
          gcloud app deploy app.yaml --quiet
